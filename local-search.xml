<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>白色相簿2杂谈</title>
    <link href="/2024/11/06/white-album2/"/>
    <url>/2024/11/06/white-album2/</url>
    
    <content type="html"><![CDATA[<h1 id="白色相簿2-专题杂谈"><a href="#白色相簿2-专题杂谈" class="headerlink" title="白色相簿2 专题杂谈"></a>白色相簿2 专题杂谈</h1><p>前不久看泛八爷的白2杂谈直播，心中感慨异常。白色相簿2可以说是对我影响巨大的一部ACG作品，我很难说“我最喜欢的动画”是哪一部作品，在整个ACG界里，白色相簿2是我最喜欢的作品，没有之一。它实在是值得我为它专门写一篇博客！</p><p><img src="/../img/white_album2/1.png" alt="和砂婚纱照镇贴表明立场"></p><h2 id="白2的游玩经历"><a href="#白2的游玩经历" class="headerlink" title="白2的游玩经历"></a>白2的游玩经历</h2><p>白色相簿2是我的第一部galgame，也是基本上唯一一部我专心游玩的正经作品（这之后除了ATRI基本就恶堕到柚子社的怀抱中去了）。原因很简单：不知道是不是我过于浮躁的原因，比起一部往往必须在电脑上游玩数十个小时才能通关的galgame，我更倾向在手机上就能看完，长度一般6-7个小时的番剧。</p><p>第一次玩白2是很久之前的故事了。当时动画看的也不多，还停留在“疯狂看恋爱漫”吃糖吃到饱的阶段，只是在个别后宫党争题材的作品中多次看到过“白学”的大名。恰好有个机会拿到了白色相簿2的原作，于是就开始了我的第一次推galgame的经历。</p><p>有一说一，这次经历说不上愉快，我甚至都没能玩完整部游戏。IC线的沉重我还勉强撑得住，但CC线春雪二人的多次“错过”实在是让当时还“纯良”的我完全无法接受。我完全无法接受雪菜在CC线路的悲剧，在我推到“雪菜认为春希有了新女友”后，我再也坚持不住了，直接跳过了剧情，结束了游戏（甚至为了雪菜的幸福还用跳过剧情的方式速通了雪菜te，只不过剧情一点也没看就是了）。</p><p>这之后我对于白色相簿2就只停留在把《时之魔法》听上n遍了，这时候的我是个“忠诚”的雪菜党。虽然名义上说“不会再玩白2”了，但我的电脑里却一直留着一份白2.可以说，虽然它深深刺痛了我，但我也深深爱上了这部作品。</p><p>第二次玩是在一年多后。这时候的我已经不再是“速通恋爱漫”的状态，而是向着白河豚的方向发展了。可能是时间足够长，让我忘却了昔日的一些痛楚，我又打开了这部游戏，不过是从手机上（第二次用的是模拟器，效果并不好，很卡顿，字也很小）。我是从头重玩的，重看了一遍IC后，我整个心态发生了巨大的变化。</p><p>可能是过了一年二次元浓度又上升了（惭愧），也可能是对于已经知道剧情，所以开始扣细节了，总之，我看到了曾经不曾注意的IC里春冬二人无可比拟的情愫，可以说从这以后，我就基本告别雪菜党的日子，开始投向冬马的怀抱了……很可惜的是，这次出于时间的问题，我只玩完IC就停下了脚步。</p><p>再之后，就是在bilibili上看冬马te的录制剧情（电脑推galgame实在是太累了）。我终于彻彻底地的变成了冬马党。我被冬马te二人的感情震撼到了。当冬马说出殉情的话语的时候，我的心，再也无法接受任何她没有获得幸福的结局了。</p><p><img src="/../img/white_album2/2.png" alt="我破防了，没办法就吃这一套"></p><p>但是看b站的录制剧情与“自己亲身推”还是有较大差距的。于是在这之后不久，我又重新打开了游戏，再电脑上一个人一点一点，通关了大部分的线路。这个时候的我已经化身白河豚，甚至是扭曲怪了，这次再去玩白色相簿2，就已经不会像当年那样痛彻心扉了，看到冬马趴在方向盘上大哭，甚至会笑出来（恶堕成33989的形状了，这到底是怎么回事呢）。但是我对于冬马的情感并没有变淡，反而更加浓烈了。</p><p>说来惭愧，截至目前，我还没有彻底的玩完所有线路（截至目前是还有雪菜ne&#x2F;CC千晶线），不过剩下的已经不多了，总有一日是会全部通完的，到时候我也会再回到这篇博客做一些修改。</p><h2 id="剧情评价"><a href="#剧情评价" class="headerlink" title="剧情评价"></a>剧情评价</h2>]]></content>
    
    
    <categories>
      
      <category>ACG</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACG</tag>
      
      <tag>白色相簿2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fedora</title>
    <link href="/2024/11/06/fedora/"/>
    <url>/2024/11/06/fedora/</url>
    
    <content type="html"><![CDATA[<h1 id="Fedora-我们最终选择的发行版"><a href="#Fedora-我们最终选择的发行版" class="headerlink" title="Fedora 我们最终选择的发行版"></a>Fedora 我们最终选择的发行版</h1><h2 id="发行版的选择"><a href="#发行版的选择" class="headerlink" title="发行版的选择"></a>发行版的选择</h2><p>我也算是与linux打了一段时间的交道了。你要使用linux，选择发行版是你绕不开的问题。我也体验过其他的很多发行版，但不得不说，fedora的体验十分优秀。</p><p>它有基本上很新的软件库（fedora的版本更新很快，debian和ubuntu的稳定版的更新速度远不如fedora），有开箱即用的软件环境（debian和arch高度的自定义反而会给我一种无法掌控的感觉，可能是我水平有限），有可信任大厂作后背（比起强推snap的 Canonical ，实力强劲的红帽显然更讨人喜欢），有稳定的发行版本（滚动更新实在是……）。</p><p>当然，fedora也有它的缺点，过分快的版本更新可能让你出问题时找不到完全对应版本的解决方法，中文社区也并不活跃，而中文环境下对于rpm的支持力度比起deb来说也差不少。</p><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>fedora的安装并没有什么需要多说的，我们要记录的是安装后的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">系统更新</span><br>sudo dnf update<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置主机名</span><br>sudo hostnamectl set-hostname 主机名<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">本地安装</span><br>sudo dnf localinstall google-chrome-stable_current_x86_64.rpm<br>sudo dnf localinstall code_xxx.rpm<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">插件管理</span><br>sudo dnf install gnome-tweaks gnome-extensions-app <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装插件</span><br>Compiz windows effect<br>Compiz alike magic lamp effect<br>OpenWeather Refined<br>Dash to Dock <br>Blur my Shell <br>Net Speed <br>GSConnect<br>Desktop Cube<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">开发使用</span><br>sudo dnf install gcc g++ git cmake gdb <br>sudo dnf install gedit vim nano <br>sudo dnf install okular neofetch<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置git</span><br>git config --global user.name &quot;&quot;<br>git config --global user.email &quot;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用docker</span><br>sudo dnf install docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">我的docker版本：Docker version 24.0.5, build %&#123;shortcommit_cli&#125;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">dokcer 配置</span><br>sudo usermod -aG docker $USER<br>sudo chmod 777 /var/run/docker.sock<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用bochs</span><br>sudo dnf install bochs<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">我的bochs版本</span><br>Bochs x86 Emulator 2.8 Built from GitHub snapshot on March 10, 2024<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用firacode字体</span><br>sudo dnf install fira-code-fonts<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">全局代理</span><br>sudo gedit /etc/profile<br> <br>export http_proxy=http://ip:port<br> <br>export https_proxy=http://ip:port<br> <br>source /etc/profile<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">docker配置网络环境</span><br><br>sudo mkdir -p /etc/systemd/system/docker.service.d<br>sudo touch /etc/systemd/system/docker.service.d/proxy.conf<br><br>[Service]<br>Environment=&quot;HTTP_PROXY=http://proxy.example.com:8080/&quot;<br>Environment=&quot;HTTPS_PROXY=http://proxy.example.com:8080/&quot;<br>Environment=&quot;NO_PROXY=localhost,127.0.0.1,.example.com&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启生效</span><br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置root用户</span><br>sudo passwd<br></code></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>个人感觉：linux的发行版是你不需要太纠结的问题 —— 没有任何一个发行版真正做到了匹配一切问题。我们应该选择的是“支持主要功能”的发行版，它支持你的“主要需求”，那么它对你来说就是一个合格的发行版。</p><p>那么其他需求怎么解决呢？那只好让docker出马解决剩下的麻烦了。</p>]]></content>
    
    
    <categories>
      
      <category>配置教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fedora</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/06/hello-world/"/>
    <url>/2024/11/06/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h1><p>这是我们博客的第一篇文章，我们主要是扯一些废话。</p><p>这篇文章要回答几个问题；</p><p>这个博客要怎么构建？为什么要搞一个博客？我们会写些什么？</p><h2 id="这个博客要怎么构建"><a href="#这个博客要怎么构建" class="headerlink" title="这个博客要怎么构建"></a>这个博客要怎么构建</h2><p>为了方便我们日后可能的重构，我要大致记录一下我们的构建流程。我们使用fedora来构建这个系统，不得不说，Fedora在开箱即用方面的体验还是很不错的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">Fedora Linux 40 (Workstation Edition) x86_64<br>Kernel: 6.8.5-301.fc40.x86_64s<br><br>sudo dnf install npm<br>sudo npm install -g hexo-cli<br><br>hexo -v    # 查看hexo版本 我的版本 hexo-cli: 4.3.2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化建立博客文件夹</span><br>sudo hexo init blog<br>cd blog<br>sudo npm install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">我们使用Fluid主题</span><br>sudo npm install --save hexo-theme-fluid<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">我们始终使用root创建，可能会妨碍我们编辑文件，稍微修改一下文件夹用户</span><br>sudo chown 用户名 ../blog -R<br></code></pre></td></tr></table></figure><p>在新创建的博客文件夹下创建 _config.fluid.yml，并写入官方提供的 _config.fluid.yml，以后我们的配置修改主要就是在_config.fluid.yml上。</p><p>再修改_config.yml：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">theme: fluid  # 指定主题<br><br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br></code></pre></td></tr></table></figure><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">---<br>title: 标题<br>layout: about<br>---<br>这里写about页的正文，支持 Markdown, HTML<br></code></pre></td></tr></table></figure><p>好，我们使用指令生成网站并本地测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">生成文件</span><br>sudo hexo g<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">本地运行</span><br>sudo hexo s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">清除缓存</span><br>sudo hexo clean<br></code></pre></td></tr></table></figure><p>我们要发表新的文章，需要使用指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new post 文章名<br></code></pre></td></tr></table></figure><p>新创建的文件会在source&#x2F;_posts中找到。在source&#x2F;img中可以存放一些图片方便我们编辑主页面和其他页面。</p><p>最后如何发布到github page？</p><p>在使用 <code>sudo hexo g</code> 生成页面后将 public 同步到 github 的用户名.github.io 即可。</p><p>我们只是简单的讲述了一下流程，详细的配置请参考<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">官方网站</a>。</p><h2 id="为什么要搞一个博客"><a href="#为什么要搞一个博客" class="headerlink" title="为什么要搞一个博客"></a>为什么要搞一个博客</h2><p>我们的主要目标是构建学习经历，我是个有些急躁的人，如果不用些什么手段记录一下我们的学习历程，是很容易犯眼高手低的丑毛病的。</p><p>同时，在学习经历中，会有很多一闪而过的点子，这些点子正是我们“学习–&gt;思考”后的创造，如果没有什么能够详细记录下来就如沙飞逝了。</p><p>除去记录学习经历，我是很推荐构建一个博客来记录自己的很多可以“暴露”的想法的。很多有意思的点子不记录下来真的是浪费，但你让我直接发布到社交媒体上，那是万万不能的……</p><h2 id="我们会写些什么"><a href="#我们会写些什么" class="headerlink" title="我们会写些什么"></a>我们会写些什么</h2><ul><li><p>学习流程记录</p></li><li><p>Acg杂评</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fluid</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
